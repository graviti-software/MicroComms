name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup .NET SDK
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.0.x'

      - name: Restore dependencies
        run: dotnet restore MicroComms.sln

      - name: Build solution
        run: dotnet build MicroComms.sln --no-restore --configuration Release

      - name: Test with coverage
        run: dotnet test --no-build --configuration Release --collect:"XPlat Code Coverage" --results-directory TestResults

      - name: Install ReportGenerator
        run: dotnet tool install --global dotnet-reportgenerator-globaltool

      - name: Create HTML coverage report
        run: reportgenerator \
             -reports:TestResults/**/coverage.cobertura.xml \
             -targetdir:coverage-report \
             -reporttypes:Html

      - name: Upload coverage report
        uses: actions/upload-artifact@v4
        with:
            name: coverage-report
            path: coverage-report

  publish-coverage-pages:
    name: Publish Coverage to Pages
    needs: build
    runs-on: ubuntu-latest
    permissions:
      pages: write
      id-token: write

    steps:
      - uses: actions/checkout@v3

      - name: Download coverage artifact
        uses: actions/download-artifact@v4
        with:
          name: coverage-report
          path: coverage-report

      - name: Configure GitHub Pages
        uses: actions/configure-pages@v3

      - name: Deploy to GitHub Pages
        uses: actions/deploy-pages@v1
        with:
          folder: coverage-report